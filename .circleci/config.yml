  
version: 2.1
executors:
  default:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node-browsers
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: .bundle
commands:
  install_bundler:
    steps:
      - run:
          name: install bundler
          command: gem install bundler     
  restore_bundle_cache:
    steps:
      - restore_cache:
          keys:
            - rails-demo-bundle-v1-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v1-
  install_bundle:
    steps:
      - run:
          name: install bundle
          command: bundle install
  save_bundle_cache:
    steps:
      - save_cache:
          key: rails-demo-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - .bundle
  restore_yarn_cache:
    steps:
      - restore_cache:
          keys:
            - rails-demo-yarn-v1-{{ checksum "yarn.lock" }}
  install_yarn:
    steps:
      - run:
          name: install yarn
          command: yarn install --cache-folder ~/.cache/yarn
  save_yarn_cache:
    steps:
      - save_cache:
          key: rails-demo-yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn      
jobs:
  build:
    parallelism: 1
    executor: default
    environment:
      RAILS_ENV: test
    steps:
      - checkout
      - install_bundler
      - restore_bundle_cache
      - install_bundle
      - save_bundle_cache
      - restore_yarn_cache
      - install_yarn
      - save_yarn_cache
      - run:
          name: run tests
          command: |
            bundle exec rake test
            bundle exec rake test:system
      - store_test_results:
          path: test/reports
  deploy:
    parallelism: 1
    executor: default
    environment:
      RAILS_ENV: production
    steps:
      - checkout
      - install_bundler
      - restore_bundle_cache
      - install_bundle
      - save_bundle_cache
      - restore_yarn_cache
      - install_yarn
      - save_yarn_cache
      - add_ssh_keys:
          fingerprints:
            - "91:5b:7f:10:ad:ce:3b:67:7f:7e:bf:50:f6:25:ab:5c"
      - run:
          name: deploy by ssh
          command: |
            bundle exec cap production deploy
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master




# version: 2.1
# jobs: # ステップの集合
#   build: # Workflows を使用しない実行では、エントリポイントとして `build` ジョブが必要
#     parallelism: 3 # このジョブのインスタンスを 3つ並列実行します
#     docker: # Docker でステップを実行します
#       - image: circleci/ruby:2.6.5-node-browsers # このイメージをすべての `steps` が実行されるプライマリコンテナとして使用します
#         environment: # プライマリコンテナの環境変数
#           BUNDLE_JOBS: 3
#           BUNDLE_RETRY: 3
#           BUNDLE_PATH: vendor/bundle
#           PGHOST: 127.0.0.1
#           PGUSER: circleci-demo-ruby
#           RAILS_ENV: test
#       - image: circleci/postgres:11.5-alpine # データベースイメージ
#         environment: # データベースの環境変数
#           POSTGRES_USER: circleci-demo-ruby
#           POSTGRES_DB: rails_blog
#           POSTGRES_PASSWORD: ""
#     steps: # 実行可能コマンドの集合
#       - checkout # ソースコードを作業ディレクトリにチェックアウトする特別なステップ

#       - run:
#           name: Update bundler
#           command: gem update bundler

#       - run:
#           name: Which bundler? # バージョン確認
#           command: bundle -v

#       # バンドルキャッシュを復元します
#       # 依存関係キャッシュについては https://circleci.com/docs/ja/2.0/caching/ をお読みください

#       - restore_cache:
#           keys:
#             - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#             - rails-demo-bundle-v2-

#       - run: # Ruby の依存関係をインストールします
#           name: バンドルインストール
#           command: bundle check --path vendor/bundle || bundle install --deployment

#       # Ruby の依存関係のバンドルキャッシュを保存します

#       - save_cache:
#           key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle

#       # アプリケーションで Webpacker または Yarn を他の何らかの方法で使用する場合にのみ必要です

#       - restore_cache:
#           keys:
#             - rails-demo-yarn-{{ checksum "yarn.lock" }}
#             - rails-demo-yarn-

#       - run:
#           name: Yarn をインストール
#           command: yarn install --cache-folder ~/.cache/yarn

#       # Yarn または Webpacker のキャッシュを保存します

#       - save_cache:
#           key: rails-demo-yarn-{{ checksum "yarn.lock" }}
#           paths:
#             - ~/.cache/yarn

#       - run:
#           name: DB を待機
#           command: dockerize -wait tcp://localhost:5432 -timeout 1m

#       - run:
#           name: データベースをセットアップ
#           command: bin/rails db:schema:load --trace

#       - run:
#           name: Rails test
#           command: |
#             bin/rails test
#             bin/rails test:system

#       # タイミング解析のテスト結果を保存します

#       - store_test_results: # テストサマリー (https://circleci.com/docs/ja/2.0/collect-test-data/) に表示するテスト結果をアップロードします
#           path: test_results

# workflows:  
#   build_and_test:  
#     jobs:  
#       - test  
