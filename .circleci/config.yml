version: 2.1 # バージョン指定  

executors:  
  default:  
    working_directory: ~/sample  
    docker:  
      - image: circleci/ruby:2.6.5-node-browsers  
        environment:  
          BUNDLER_VERSION: 2.1.4 # <= これ必須！！  
          BUNDLE_JOBS: 3  
          BUNDLE_RETRY: 3  
          BUNDLE_PATH: vendor/bundle  
          PGHOST: 127.0.0.1  
          PGUSER: sample  
          PGPASSWORD: ""  
      - image: circleci/postgres:11.5-alpine  
        environment:  
          POSTGRES_USER: sample  
          POSTGRES_DB: sample_test  
          POSTGRES_PASSWORD: ""  

commands:  
  setup:  
    steps:  
      - checkout  
      - run:  
          name: Update bundler # bundlerのバージョン２へのアップデート  
          command: gem update bundler  

      - run:  
          name: Which bundler? # バージョン確認  
          command: bundle -v  

      - restore_cache: # キャッシュを読み込む  
          keys:  
            - gem-cache-v1-{{ checksum "Gemfile.lock" }}  
            - gem-cache-v1-  

      - run:  
          name: Bundle Install  
          command: bundle check --path vendor/bundle || bundle install --deployment  

      - save_cache: # キャッシュを保存する  
          key: gem-cache-v1-{{ checksum "Gemfile.lock" }}  
          paths:  
            - vendor/bundle  

      # 以下はRails6でWebpackerを使う場合は必須   
      - restore_cache:  
          keys:  
            - yarn-cache-v1-{{ checksum "yarn.lock" }}  
            - yarn-cache-v1-  

      - run:  
          name: Yarn Install  
          command: yarn install --cache-folder ~/.cache/yarn  

      - save_cache:  
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}  
          paths:  
            - ~/.cache/yarn  

jobs:  
  test:  
    executor: default  
    environment:  
      RAILS_ENV: test  
    steps:  
      - checkout  
      - setup  
      - run:  
          name: Wait for DB  
          command: dockerize -wait tcp://localhost:5432 -timeout 1m  

      - run:  
          name: Database setup  
          command: bin/rails db:schema:load --trace  

      - run: # 普通のテストとシステムテストを実行する  
          name: Rails Test  
          command: |  
            bin/rails test  
            bin/rails test:system  

workflows:  
  build_and_test:  
    jobs:  
      - test  




# version: 2.1
# jobs: # ステップの集合
#   build: # Workflows を使用しない実行では、エントリポイントとして `build` ジョブが必要
#     parallelism: 3 # このジョブのインスタンスを 3つ並列実行します
#     docker: # Docker でステップを実行します
#       - image: circleci/ruby:2.6.5-node-browsers # このイメージをすべての `steps` が実行されるプライマリコンテナとして使用します
#         environment: # プライマリコンテナの環境変数
#           BUNDLE_JOBS: 3
#           BUNDLE_RETRY: 3
#           BUNDLE_PATH: vendor/bundle
#           PGHOST: 127.0.0.1
#           PGUSER: circleci-demo-ruby
#           RAILS_ENV: test
#       - image: circleci/postgres:11.5-alpine # データベースイメージ
#         environment: # データベースの環境変数
#           POSTGRES_USER: circleci-demo-ruby
#           POSTGRES_DB: rails_blog
#           POSTGRES_PASSWORD: ""
#     steps: # 実行可能コマンドの集合
#       - checkout # ソースコードを作業ディレクトリにチェックアウトする特別なステップ

#       - run:
#           name: Update bundler
#           command: gem update bundler

#       - run:
#           name: Which bundler? # バージョン確認
#           command: bundle -v

#       # バンドルキャッシュを復元します
#       # 依存関係キャッシュについては https://circleci.com/docs/ja/2.0/caching/ をお読みください

#       - restore_cache:
#           keys:
#             - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#             - rails-demo-bundle-v2-

#       - run: # Ruby の依存関係をインストールします
#           name: バンドルインストール
#           command: bundle check --path vendor/bundle || bundle install --deployment

#       # Ruby の依存関係のバンドルキャッシュを保存します

#       - save_cache:
#           key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
#           paths:
#             - vendor/bundle

#       # アプリケーションで Webpacker または Yarn を他の何らかの方法で使用する場合にのみ必要です

#       - restore_cache:
#           keys:
#             - rails-demo-yarn-{{ checksum "yarn.lock" }}
#             - rails-demo-yarn-

#       - run:
#           name: Yarn をインストール
#           command: yarn install --cache-folder ~/.cache/yarn

#       # Yarn または Webpacker のキャッシュを保存します

#       - save_cache:
#           key: rails-demo-yarn-{{ checksum "yarn.lock" }}
#           paths:
#             - ~/.cache/yarn

#       - run:
#           name: DB を待機
#           command: dockerize -wait tcp://localhost:5432 -timeout 1m

#       - run:
#           name: データベースをセットアップ
#           command: bin/rails db:schema:load --trace

#       - run:
#           name: Rails test
#           command: |
#             bin/rails test
#             bin/rails test:system

#       # タイミング解析のテスト結果を保存します

#       - store_test_results: # テストサマリー (https://circleci.com/docs/ja/2.0/collect-test-data/) に表示するテスト結果をアップロードします
#           path: test_results
# workflows:  
#   build_and_test:  
#     jobs:  
#       - test  
